[{"content":"üåê 1. Gi·ªõi thi·ªáu v·ªÅ Fetch API Fetch API l√† c√¥ng c·ª• t√≠ch h·ª£p s·∫µn trong tr√¨nh duy·ªát gi√∫p JavaScript g·ª≠i v√† nh·∫≠n d·ªØ li·ªáu t·ª´ server m√† kh√¥ng c·∫ßn t·∫£i l·∫°i trang.\nFetch ƒë∆∞·ª£c s·ª≠ d·ª•ng ph·ªï bi·∫øn trong:\nG·ªçi API (REST, GraphQL) G·ª≠i d·ªØ li·ªáu form L·∫•y d·ªØ li·ªáu JSON t·ª´ backend ‚öôÔ∏è 2. C√∫ ph√°p c∆° b·∫£n 1 2 3 4 fetch(url) .then(response =\u0026gt; response.json()) // chuy·ªÉn d·ªØ li·ªáu JSON .then(data =\u0026gt; console.log(data)) .catch(error =\u0026gt; console.error(\u0026#34;L·ªói:\u0026#34;, error)); V√≠ d·ª•:\n1 2 3 4 fetch(\u0026#34;https://jsonplaceholder.typicode.com/posts/1\u0026#34;) .then(res =\u0026gt; res.json()) .then(data =\u0026gt; console.log(\u0026#34;D·ªØ li·ªáu:\u0026#34;, data)) .catch(err =\u0026gt; console.error(\u0026#34;L·ªói:\u0026#34;, err)); K·∫øt qu·∫£:\n1 2 3 4 5 6 { \u0026#34;userId\u0026#34;: 1, \u0026#34;id\u0026#34;: 1, \u0026#34;title\u0026#34;: \u0026#34;sunt aut facere repellat provident occaecati\u0026#34;, \u0026#34;body\u0026#34;: \u0026#34;quia et suscipit...\u0026#34; } üß† 3. Fetch v·ªõi Async / Await\nC√°ch vi·∫øt hi·ªán ƒë·∫°i, d·ªÖ ƒë·ªçc h∆°n Promise chaining.\n1 2 3 4 5 6 7 8 9 10 11 async function getPost() { try { const res = await fetch(\u0026#34;https://jsonplaceholder.typicode.com/posts/1\u0026#34;); const data = await res.json(); console.log(\u0026#34;Ti√™u ƒë·ªÅ:\u0026#34;, data.title); } catch (error) { console.error(\u0026#34;L·ªói:\u0026#34;, error); } } getPost(); üí° D√πng try\u0026hellip;catch ƒë·ªÉ b·∫Øt l·ªói khi fetch th·∫•t b·∫°i (v√≠ d·ª•: m·∫•t m·∫°ng, server l·ªói).\nüß© 4. G·ª≠i d·ªØ li·ªáu v·ªõi ph∆∞∆°ng th·ª©c POST\nFetch m·∫∑c ƒë·ªãnh l√† GET.\nN·∫øu mu·ªën g·ª≠i d·ªØ li·ªáu l√™n server, d√πng ph∆∞∆°ng th·ª©c POST v√† th√™m body (th∆∞·ªùng l√† JSON).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 async function createPost() { try { const res = await fetch(\u0026#34;https://jsonplaceholder.typicode.com/posts\u0026#34;, { method: \u0026#34;POST\u0026#34;, headers: { \u0026#34;Content-Type\u0026#34;: \u0026#34;application/json\u0026#34; }, body: JSON.stringify({ title: \u0026#34;B√†i vi·∫øt m·ªõi\u0026#34;, body: \u0026#34;ƒê√¢y l√† n·ªôi dung b√†i vi·∫øt\u0026#34;, userId: 1 }) }); const data = await res.json(); console.log(\u0026#34;K·∫øt qu·∫£:\u0026#34;, data); } catch (error) { console.error(\u0026#34;L·ªói g·ª≠i d·ªØ li·ªáu:\u0026#34;, error); } } createPost(); K·∫øt qu·∫£:\n1 2 3 4 5 6 { \u0026#34;title\u0026#34;: \u0026#34;B√†i vi·∫øt m·ªõi\u0026#34;, \u0026#34;body\u0026#34;: \u0026#34;ƒê√¢y l√† n·ªôi dung b√†i vi·∫øt\u0026#34;, \u0026#34;userId\u0026#34;: 1, \u0026#34;id\u0026#34;: 101 } üîÅ 5. C√°c ph∆∞∆°ng th·ª©c HTTP ph·ªï bi·∫øn\nPh∆∞∆°ng th·ª©c\tM·ª•c ƒë√≠ch\tV√≠ d·ª•\nGET\tL·∫•y d·ªØ li·ªáu\tL·∫•y danh s√°ch b√†i vi·∫øt\nPOST\tG·ª≠i d·ªØ li·ªáu m·ªõi\tT·∫°o b√†i vi·∫øt m·ªõi\nPUT\tC·∫≠p nh·∫≠t to√†n b·ªô t√†i nguy√™n\tC·∫≠p nh·∫≠t b√†i vi·∫øt\nPATCH\tC·∫≠p nh·∫≠t m·ªôt ph·∫ßn\tS·ª≠a m·ªôt tr∆∞·ªùng\nDELETE\tX√≥a t√†i nguy√™n\tX√≥a b√†i vi·∫øt\nüí° 6. Ki·ªÉm tra m√£ ph·∫£n h·ªìi (HTTP Status Code)\nFetch kh√¥ng n√©m l·ªói cho m√£ HTTP 404 hay 500 ‚Äî b·∫°n c·∫ßn ki·ªÉm tra th·ªß c√¥ng:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 async function getData() { try { const res = await fetch(\u0026#34;https://jsonplaceholder.typicode.com/abc\u0026#34;); if (!res.ok) { throw new Error(\u0026#34;L·ªói HTTP: \u0026#34; + res.status); } const data = await res.json(); console.log(data); } catch (err) { console.error(err.message); } } getData(); K·∫øt qu·∫£:\n1 L·ªói HTTP: 404 üì¨ 7. G·ª≠i d·ªØ li·ªáu Form\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \u0026lt;form id=\u0026#34;myForm\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; placeholder=\u0026#34;T√™n ng∆∞·ªùi d√πng\u0026#34; /\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt;G·ª≠i\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;script\u0026gt; const form = document.getElementById(\u0026#34;myForm\u0026#34;); form.addEventListener(\u0026#34;submit\u0026#34;, async (e) =\u0026gt; { e.preventDefault(); const formData = new FormData(form); const data = Object.fromEntries(formData.entries()); const res = await fetch(\u0026#34;/api/users\u0026#34;, { method: \u0026#34;POST\u0026#34;, headers: { \u0026#34;Content-Type\u0026#34;: \u0026#34;application/json\u0026#34; }, body: JSON.stringify(data) }); console.log(await res.json()); }); \u0026lt;/script\u0026gt; ‚ö†Ô∏è 8. B·∫Øt l·ªói m·∫°ng v√† Timeout\nFetch kh√¥ng c√≥ timeout m·∫∑c ƒë·ªãnh, nh∆∞ng ta c√≥ th·ªÉ t·ª± x·ª≠ l√Ω b·∫±ng Promise.race():\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 async function fetchWithTimeout(url, ms) { const controller = new AbortController(); const timeout = setTimeout(() =\u0026gt; controller.abort(), ms); try { const res = await fetch(url, { signal: controller.signal }); return await res.json(); } catch (error) { console.error(\u0026#34;L·ªói ho·∫∑c qu√° th·ªùi gian:\u0026#34;, error.name); } finally { clearTimeout(timeout); } } fetchWithTimeout(\u0026#34;https://jsonplaceholder.typicode.com/users\u0026#34;, 2000); üìö 9. T·ªïng k·∫øt\nT√≠nh nƒÉng\tM√¥ t·∫£\nFetch API\tG·ª≠i/nh·∫≠n d·ªØ li·ªáu t·ª´ server\nPromise \u0026amp; Async/Await\tGi√∫p x·ª≠ l√Ω b·∫•t ƒë·ªìng b·ªô d·ªÖ ƒë·ªçc h∆°n\nGET / POST / PUT / DELETE\tC√°c ph∆∞∆°ng th·ª©c HTTP ph·ªï bi·∫øn\nKi·ªÉm tra res.ok\tƒê·∫£m b·∫£o ph·∫£n h·ªìi th√†nh c√¥ng\nB·∫Øt l·ªói m·∫°ng\tD√πng try\u0026hellip;catch v√† timeout\n‚úÖ K·∫øt lu·∫≠n\nFetch API l√† c√¥ng c·ª• m·∫°nh m·∫Ω ƒë·ªÉ giao ti·∫øp gi·ªØa frontend v√† backend.\nK·∫øt h·ª£p async/await gi√∫p m√£ d·ªÖ hi·ªÉu, r√µ r√†ng v√† tr√°nh callback hell.\nHi·ªÉu r√µ HTTP status code gi√∫p b·∫°n ki·ªÉm so√°t logic v√† hi·ªÉn th·ªã th√¥ng b√°o h·ª£p l√Ω.\n","description":"T√¨m hi·ªÉu c√°ch s·ª≠ d·ª•ng Fetch API ƒë·ªÉ g·ª≠i y√™u c·∫ßu HTTP (GET, POST), x·ª≠ l√Ω d·ªØ li·ªáu JSON v√† l√†m vi·ªác v·ªõi async/await trong JavaScript.","id":1,"section":"posts","tags":["JavaScript","Fetch API","HTTP","JSON","Async"],"title":"Fetch API v√† Giao ti·∫øp v·ªõi Server trong JavaScript","uri":"https://leeminhquang.github.io/blogcuaquang/posts/js-fetch-api/"},{"content":"üß© Gi·ªõi thi·ªáu chung Java l√† m·ªôt ng√¥n ng·ªØ l·∫≠p tr√¨nh ƒëa n·ªÅn t·∫£ng (cross-platform), h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng (OOP) v√† b·∫£o m·∫≠t cao, ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi Sun Microsystems (nay thu·ªôc Oracle). Java cho ph√©p l·∫≠p tr√¨nh vi√™n ‚ÄúWrite Once, Run Anywhere‚Äù ‚Äî nghƒ©a l√† ch·ªâ c·∫ßn vi·∫øt m·ªôt l·∫ßn, c√≥ th·ªÉ ch·∫°y tr√™n m·ªçi h·ªá ƒëi·ªÅu h√†nh h·ªó tr·ª£ Java Virtual Machine (JVM).\n‚öôÔ∏è Ki·∫øn tr√∫c Java Khi b·∫°n bi√™n d·ªãch m·ªôt ch∆∞∆°ng tr√¨nh Java:\nM√£ ngu·ªìn (.java) ‚Üí ƒë∆∞·ª£c bi√™n d·ªãch th√†nh bytecode (.class) b·∫±ng javac. Bytecode ‚Üí ƒë∆∞·ª£c ch·∫°y b·ªüi JVM (Java Virtual Machine). JVM c√≥ th·ªÉ th·ª±c thi bytecode tr√™n m·ªçi h·ªá ƒëi·ªÅu h√†nh (Windows, macOS, Linux\u0026hellip;). Source Code (.java) ‚Üí Compiler ‚Üí Bytecode (.class) ‚Üí JVM ‚Üí OS\nƒêi·ªÅu n√†y gi√∫p Java tr·ªü th√†nh ng√¥n ng·ªØ ph·ªï bi·∫øn trong ·ª©ng d·ª•ng di ƒë·ªông (Android), web backend, AI/ML, IoT, v√† ·ª©ng d·ª•ng doanh nghi·ªáp (Spring, Jakarta EE).\nüß± ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t ƒê·∫∑c ƒëi·ªÉm Gi·∫£i th√≠ch ƒêa n·ªÅn t·∫£ng Ch·∫°y ƒë∆∞·ª£c tr√™n nhi·ªÅu h·ªá ƒëi·ªÅu h√†nh nh·ªù JVM H∆∞·ªõng ƒë·ªëi t∆∞·ª£ng (OOP) M·ªçi th·ª© ƒë·ªÅu l√† ƒë·ªëi t∆∞·ª£ng B·∫£o m·∫≠t cao C√≥ tr√¨nh qu·∫£n l√Ω b·ªô nh·ªõ v√† sandbox ƒêa lu·ªìng (Multithreading) Cho ph√©p ch·∫°y song song nhi·ªÅu t√°c v·ª• Qu·∫£n l√Ω b·ªô nh·ªõ t·ª± ƒë·ªông Garbage Collector gi√∫p gi·∫£i ph√≥ng b·ªô nh·ªõ kh√¥ng c√≤n d√πng Th∆∞ vi·ªán phong ph√∫ C√≥ s·∫µn h√†ng ngh√¨n th∆∞ vi·ªán chu·∫©n (Java Standard Library) üíª C·∫•u tr√∫c ch∆∞∆°ng tr√¨nh Java c∆° b·∫£n M·ªôt ch∆∞∆°ng tr√¨nh Java t·ªëi thi·ªÉu c√≥ c·∫•u tr√∫c nh∆∞ sau:\n1 2 3 4 5 public class HelloWorld { public static void main(String[] args) { System.out.println(\u0026#34;Xin ch√†o, Java!\u0026#34;); } } Gi·∫£i th√≠ch:\npublic class HelloWorld: ƒê·ªãnh nghƒ©a m·ªôt l·ªõp (class) t√™n l√† HelloWorld.\npublic static void main(String[] args): L√† h√†m main ‚Äî ƒëi·ªÉm b·∫Øt ƒë·∫ßu c·ªßa ch∆∞∆°ng tr√¨nh.\nSystem.out.println(\u0026hellip;): In ra m√†n h√¨nh d√≤ng ch·ªØ.\nüëâ Khi ch·∫°y, k·∫øt qu·∫£ l√†:\n1 Xin ch√†o, Java! üß† Bi·∫øn v√† Ki·ªÉu d·ªØ li·ªáu trong Java\nJava l√† ng√¥n ng·ªØ ki·ªÉu tƒ©nh (statically typed), nghƒ©a l√† ph·∫£i khai b√°o ki·ªÉu d·ªØ li·ªáu tr∆∞·ªõc khi s·ª≠ d·ª•ng.\nV√≠ d·ª•:\n1 2 3 4 5 6 7 int age = 20; double salary = 5500.75; boolean isStudent = false; char grade = \u0026#39;A\u0026#39;; String name = \u0026#34;L√™ Minh Quang\u0026#34;; System.out.println(\u0026#34;T√™n: \u0026#34; + name + \u0026#34;, Tu·ªïi: \u0026#34; + age); M·ªôt s·ªë ki·ªÉu d·ªØ li·ªáu c∆° b·∫£n:\nKi·ªÉu d·ªØ li·ªáu\tV√≠ d·ª•\tK√≠ch th∆∞·ªõc (byte)\nbyte\t10\t1\nshort\t1000\t2\nint\t100000\t4\nlong\t123456789L\t8\nfloat\t3.14f\t4\ndouble\t3.141592\t8\nboolean\ttrue / false\t1\nchar\t\u0026lsquo;A\u0026rsquo;\t2\nString\t\u0026ldquo;Hello\u0026rdquo;\t‚Äî\nüîÅ C·∫•u tr√∫c ƒëi·ªÅu khi·ªÉn\nC√¢u l·ªánh if-else\n1 2 3 4 5 6 7 8 9 10 11 int age = 18; if (age \u0026gt;= 18) { System.out.println(\u0026#34;ƒê√£ ƒë·ªß tu·ªïi tr∆∞·ªüng th√†nh\u0026#34;); } else { System.out.println(\u0026#34;Ch∆∞a ƒë·ªß tu·ªïi\u0026#34;); }``` V√≤ng l·∫∑p for ```java for (int i = 1; i \u0026lt;= 5; i++) { System.out.println(\u0026#34;L·∫ßn l·∫∑p th·ª©: \u0026#34; + i); } V√≤ng l·∫∑p while\n1 2 3 4 5 int count = 1; while (count \u0026lt;= 3) { System.out.println(\u0026#34;ƒê·∫øm: \u0026#34; + count); count++; } üìö T·ªïng k·∫øt\nJava l√† n·ªÅn t·∫£ng l·∫≠p tr√¨nh m·∫°nh m·∫Ω, b·∫£o m·∫≠t, ƒëa n·ªÅn t·∫£ng.\nC·∫•u tr√∫c ch∆∞∆°ng tr√¨nh r√µ r√†ng, d·ªÖ h·ªçc cho ng∆∞·ªùi m·ªõi.\nL√† ng√¥n ng·ªØ n·ªÅn t·∫£ng cho nhi·ªÅu framework l·ªõn nh∆∞ Spring, Hibernate, Android SDK.\n","description":"T√¨m hi·ªÉu l·ªãch s·ª≠, ƒë·∫∑c ƒëi·ªÉm, ki·∫øn tr√∫c v√† c√∫ ph√°p c∆° b·∫£n c·ªßa Java ‚Äî ng√¥n ng·ªØ l·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng ph·ªï bi·∫øn nh·∫•t th·∫ø gi·ªõi.","id":2,"section":"posts","tags":["Java","OOP","Programming"],"title":"Gi·ªõi thi·ªáu ng√¥n ng·ªØ Java","uri":"https://leeminhquang.github.io/blogcuaquang/posts/java-intro/"},{"content":"‚öôÔ∏è 1. Kh√°i ni·ªám v·ªÅ h√†m H√†m (Function) l√† kh·ªëi m√£ th·ª±c hi·ªán m·ªôt t√°c v·ª• c·ª• th·ªÉ v√† c√≥ th·ªÉ ƒë∆∞·ª£c t√°i s·ª≠ d·ª•ng nhi·ªÅu l·∫ßn.\nH√†m gi√∫p m√£ d·ªÖ ƒë·ªçc, d·ªÖ b·∫£o tr√¨ v√† tr√°nh l·∫∑p l·∫°i.\nC√∫ ph√°p:\n1 2 3 4 5 function tenHam(thamSo1, thamSo2) { // ph·∫ßn th√¢n h√†m return giaTri; } V√≠ d·ª•: 1 2 3 4 5 6 function tinhTong(a, b) { return a + b; } let kq = tinhTong(5, 3); console.log(\u0026#34;T·ªïng l√†:\u0026#34;, kq); K·∫øt qu·∫£:\n1 T·ªïng l√†: 8 üß© 2. H√†m c√≥ v√† kh√¥ng c√≥ tham s·ªë\nKh√¥ng c√≥ tham s·ªë:\n1 2 3 4 5 function chao() { console.log(\u0026#34;Xin ch√†o b·∫°n!\u0026#34;); } chao(); C√≥ tham s·ªë:\n1 2 3 4 5 function sayHello(name) { console.log(\u0026#34;Xin ch√†o, \u0026#34; + name + \u0026#34;!\u0026#34;); } sayHello(\u0026#34;Quang\u0026#34;); üîÅ 3. Gi√° tr·ªã tr·∫£ v·ªÅ (return)\nH√†m c√≥ th·ªÉ tr·∫£ v·ªÅ gi√° tr·ªã ƒë·ªÉ s·ª≠ d·ª•ng ·ªü n∆°i kh√°c.\n1 2 3 4 5 6 function nhanDoi(x) { return x * 2; } let ketqua = nhanDoi(10); console.log(ketqua); // 20 Khi h√†m g·∫∑p return, n√≥ d·ª´ng th·ª±c thi v√† tr·∫£ k·∫øt qu·∫£ ra ngo√†i.\n‚ö° 4. Arrow Function (H√†m m≈©i t√™n ‚Äì ES6)\nC√°ch vi·∫øt ng·∫Øn g·ªçn h∆°n cho h√†m th√¥ng th∆∞·ªùng.\n1 2 3 4 5 6 7 8 9 10 // C√°ch c≈© function square(n) { return n * n; } // Arrow function const square2 = (n) =\u0026gt; n * n; console.log(square(4)); // 16 console.log(square2(5)); // 25 M·ªôt s·ªë c√°ch vi·∫øt kh√°c:\n1 2 3 4 5 6 7 const greet = () =\u0026gt; console.log(\u0026#34;Hello!\u0026#34;); const add = (a, b) =\u0026gt; a + b; const info = (name, age) =\u0026gt; { return `${name} nƒÉm nay ${age} tu·ªïi`; }; console.log(info(\u0026#34;Lan\u0026#34;, 21)); üí° N·∫øu h√†m ch·ªâ c√≥ 1 bi·ªÉu th·ª©c, c√≥ th·ªÉ b·ªè ngo·∫∑c {} v√† t·ª´ kh√≥a return.\nüß† 5. Ph·∫°m vi (Scope) trong JavaScript\nPh·∫°m vi quy·∫øt ƒë·ªãnh n∆°i bi·∫øn ƒë∆∞·ª£c truy c·∫≠p trong ch∆∞∆°ng tr√¨nh.\nLo·∫°i\tGi·∫£i th√≠ch\tV√≠ d·ª•\nGlobal Scope\tBi·∫øn khai b√°o ngo√†i t·∫•t c·∫£ h√†m ‚Äì d√πng ƒë∆∞·ª£c m·ªçi n∆°i\tvar x = 10;\nLocal Scope\tBi·∫øn khai b√°o trong h√†m ‚Äì ch·ªâ d√πng trong h√†m ƒë√≥\tlet y = 5;\nBlock Scope (ES6)\tBi·∫øn khai b√°o trong {} (v·ªõi let, const) ch·ªâ t·ªìn t·∫°i trong kh·ªëi ƒë√≥\tif(true){ let z=1; }\nV√≠ d·ª•:\n1 2 3 4 5 6 7 8 9 10 11 let globalVar = \u0026#34;ngo√†i h√†m\u0026#34;; function testScope() { let localVar = \u0026#34;trong h√†m\u0026#34;; console.log(globalVar); // h·ª£p l·ªá console.log(localVar); // h·ª£p l·ªá } testScope(); console.log(globalVar); // h·ª£p l·ªá // console.log(localVar); ‚ùå l·ªói: kh√¥ng th·ªÉ truy c·∫≠p ngo√†i h√†m üß© 6. Hoisting trong JavaScript\nHoisting l√† c∆° ch·∫ø k√©o l√™n ƒë·∫ßu ph·∫°m vi c·ªßa khai b√°o h√†m v√† bi·∫øn (v·ªõi var) tr∆∞·ªõc khi th·ª±c thi m√£.\nV√≠ d·ª•:\n1 2 3 4 5 sayHi(); // ‚úÖ v·∫´n ch·∫°y ƒë∆∞·ª£c function sayHi() { console.log(\u0026#34;Xin ch√†o!\u0026#34;); } Nh∆∞ng v·ªõi let v√† const, hoisting kh√¥ng √°p d·ª•ng:\n1 2 console.log(x); // ‚ùå l·ªói let x = 10; ‚ö†Ô∏è V√¨ v·∫≠y, n√™n khai b√°o bi·∫øn tr∆∞·ªõc khi d√πng ƒë·ªÉ tr√°nh l·ªói logic.\nüß∞ 7. H√†m ·∫©n danh (Anonymous Function)\nH√†m kh√¥ng c√≥ t√™n, th∆∞·ªùng d√πng l√†m callback:\n1 2 3 setTimeout(function() { console.log(\u0026#34;In ra sau 2 gi√¢y\u0026#34;); }, 2000); Ho·∫∑c d√πng arrow function:\n1 setTimeout(() =\u0026gt; console.log(\u0026#34;In ra sau 2 gi√¢y (ES6)\u0026#34;), 2000); üí¨ 8. H√†m l·ªìng nhau (Nested Function)\nM·ªôt h√†m c√≥ th·ªÉ ch·ª©a h√†m kh√°c:\n1 2 3 4 5 6 7 8 9 10 11 function outer() { let message = \u0026#34;Xin ch√†o t·ª´ outer!\u0026#34;; function inner() { console.log(message); } inner(); } outer(); H√†m inner c√≥ th·ªÉ truy c·∫≠p bi·∫øn c·ªßa outer ‚Üí ƒë√¢y l√† closure.\nüìö 9. T·ªïng k·∫øt\nKh√°i ni·ªám\tM√¥ t·∫£\nFunction\tKh·ªëi m√£ th·ª±c hi·ªán nhi·ªám v·ª• c·ª• th·ªÉ\nreturn\tTr·∫£ gi√° tr·ªã t·ª´ h√†m ra ngo√†i\nArrow Function\tC√∫ ph√°p ng·∫Øn g·ªçn h∆°n, gi·ªõi thi·ªáu t·ª´ ES6\nScope\tQuy ƒë·ªãnh ph·∫°m vi truy c·∫≠p c·ªßa bi·∫øn\nHoisting\tC∆° ch·∫ø k√©o khai b√°o l√™n ƒë·∫ßu ph·∫°m vi\nClosure\tH√†m con truy c·∫≠p bi·∫øn c·ªßa h√†m cha\n","description":"T√¨m hi·ªÉu kh√°i ni·ªám h√†m (function), tham s·ªë, gi√° tr·ªã tr·∫£ v·ªÅ, arrow function v√† ph·∫°m vi bi·∫øn (scope) trong JavaScript.","id":3,"section":"posts","tags":["JavaScript","Function","Scope","Hoisting"],"title":"H√†m v√† Ph·∫°m vi trong JavaScript","uri":"https://leeminhquang.github.io/blogcuaquang/posts/js-functions/"},{"content":"üß¨ 1. Kh√°i ni·ªám k·∫ø th·ª´a (Inheritance) K·∫ø th·ª´a cho ph√©p m·ªôt l·ªõp m·ªü r·ªông (extend) l·ªõp kh√°c ƒë·ªÉ t√°i s·ª≠ d·ª•ng m√£ v√† m·ªü r·ªông ch·ª©c nƒÉng m√† kh√¥ng c·∫ßn vi·∫øt l·∫°i.\nL·ªõp g·ªëc (cha): superclass ho·∫∑c parent class L·ªõp k·∫ø th·ª´a (con): subclass ho·∫∑c child class C√∫ ph√°p: 1 2 3 class Subclass extends Superclass { // code m·ªü r·ªông } V√≠ d·ª•:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Animal { void eat() { System.out.println(\u0026#34;ƒê·ªông v·∫≠t ƒëang ƒÉn...\u0026#34;); } } class Dog extends Animal { void bark() { System.out.println(\u0026#34;G√¢u g√¢u!\u0026#34;); } } public class Main { public static void main(String[] args) { Dog d = new Dog(); d.eat(); // K·∫ø th·ª´a t·ª´ l·ªõp Animal d.bark(); // Ph∆∞∆°ng th·ª©c ri√™ng c·ªßa Dog } } K·∫øt qu·∫£:\n1 2 ƒê·ªông v·∫≠t ƒëang ƒÉn... G√¢u g√¢u! ‚öôÔ∏è 2. T·ª´ kh√≥a super trong k·∫ø th·ª´a\nsuper d√πng ƒë·ªÉ truy c·∫≠p l·ªõp cha ‚Äî g·ªìm 2 c√¥ng d·ª•ng ch√≠nh:\nG·ªçi h√†m t·∫°o c·ªßa l·ªõp cha\nG·ªçi ph∆∞∆°ng th·ª©c ho·∫∑c thu·ªôc t√≠nh c·ªßa l·ªõp cha\nV√≠ d·ª•:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Animal { Animal() { System.out.println(\u0026#34;ƒê·ªông v·∫≠t ƒë∆∞·ª£c t·∫°o\u0026#34;); } void eat() { System.out.println(\u0026#34;ƒê·ªông v·∫≠t ƒëang ƒÉn\u0026#34;); } } class Dog extends Animal { Dog() { super(); // g·ªçi constructor l·ªõp cha System.out.println(\u0026#34;Ch√≥ ƒë∆∞·ª£c t·∫°o\u0026#34;); } void eat() { super.eat(); // g·ªçi ph∆∞∆°ng th·ª©c l·ªõp cha System.out.println(\u0026#34;Ch√≥ ƒÉn c∆°m\u0026#34;); } } public class Main { public static void main(String[] args) { Dog d = new Dog(); d.eat(); } } K·∫øt qu·∫£:\n1 2 3 4 ƒê·ªông v·∫≠t ƒë∆∞·ª£c t·∫°o Ch√≥ ƒë∆∞·ª£c t·∫°o ƒê·ªông v·∫≠t ƒëang ƒÉn Ch√≥ ƒÉn c∆°m üß© 3. Ghi ƒë√® ph∆∞∆°ng th·ª©c (Method Overriding)\nOverriding x·∫£y ra khi l·ªõp con ƒë·ªãnh nghƒ©a l·∫°i ph∆∞∆°ng th·ª©c ƒë√£ t·ªìn t·∫°i ·ªü l·ªõp cha.\nD√πng ƒë·ªÉ thay ƒë·ªïi h√†nh vi cho ph√π h·ª£p v·ªõi l·ªõp con.\nV√≠ d·ª•:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Vehicle { void run() { System.out.println(\u0026#34;Ph∆∞∆°ng ti·ªán ƒëang ch·∫°y...\u0026#34;); } } class Bike extends Vehicle { @Override void run() { System.out.println(\u0026#34;Xe ƒë·∫°p ƒëang di chuy·ªÉn b·∫±ng s·ª©c ng∆∞·ªùi.\u0026#34;); } } public class Main { public static void main(String[] args) { Vehicle v = new Bike(); // Ki·ªÉu khai b√°o l√† Vehicle, ƒë·ªëi t∆∞·ª£ng th·ª±c l√† Bike v.run(); // G·ªçi ph∆∞∆°ng th·ª©c c·ªßa l·ªõp con } } K·∫øt qu·∫£:\n1 Xe ƒë·∫°p ƒëang di chuy·ªÉn b·∫±ng s·ª©c ng∆∞·ªùi. üß† 4. Kh√°i ni·ªám ƒëa h√¨nh (Polymorphism)\nƒêa h√¨nh nghƒ©a l√†: \u0026ldquo;nhi·ªÅu h√¨nh d·∫°ng\u0026rdquo;.\nTrong Java, c√πng m·ªôt ph∆∞∆°ng th·ª©c c√≥ th·ªÉ ho·∫°t ƒë·ªông kh√°c nhau t√πy theo ƒë·ªëi t∆∞·ª£ng th·ª±c t·∫ø.\nC√≥ hai lo·∫°i ƒëa h√¨nh:\nLo·∫°i\tC√°ch th·ª±c hi·ªán\tV√≠ d·ª•\nCompile-time Polymorphism\tTh√¥ng qua n·∫°p ch·ªìng ph∆∞∆°ng th·ª©c (Overloading)\tadd(int a, int b) v√† add(double a, double b)\nRuntime Polymorphism\tTh√¥ng qua ghi ƒë√® ph∆∞∆°ng th·ª©c (Overriding)\tVehicle v = new Bike(); v.run();\nüí° 5. V√≠ d·ª• t·ªïng h·ª£p: K·∫ø th·ª´a + ƒêa h√¨nh\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class Employee { void work() { System.out.println(\u0026#34;Nh√¢n vi√™n ƒëang l√†m vi·ªác...\u0026#34;); } } class Developer extends Employee { @Override void work() { System.out.println(\u0026#34;L·∫≠p tr√¨nh vi√™n ƒëang vi·∫øt code...\u0026#34;); } } class Tester extends Employee { @Override void work() { System.out.println(\u0026#34;Tester ƒëang ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm...\u0026#34;); } } public class Company { public static void main(String[] args) { Employee e1 = new Developer(); Employee e2 = new Tester(); e1.work(); e2.work(); } } K·∫øt qu·∫£:\n1 2 3 L·∫≠p tr√¨nh vi√™n ƒëang vi·∫øt code... Tester ƒëang ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm... ‚û°Ô∏è C√πng l√† Employee, nh∆∞ng h√†nh vi kh√°c nhau ‚Äî ch√≠nh l√† ƒëa h√¨nh ƒë·ªông (runtime polymorphism).\nüß© 6. L·ª£i √≠ch c·ªßa k·∫ø th·ª´a \u0026amp; ƒëa h√¨nh\n∆Øu ƒëi·ªÉm\tGi·∫£i th√≠ch\nT√°i s·ª≠ d·ª•ng m√£ (Code Reuse)\tL·ªõp con c√≥ th·ªÉ d√πng l·∫°i logic c·ªßa l·ªõp cha\nGi·∫£m tr√πng l·∫∑p\tKh√¥ng c·∫ßn vi·∫øt l·∫°i h√†m t∆∞∆°ng t·ª±\nD·ªÖ m·ªü r·ªông\tTh√™m l·ªõp m·ªõi m√† kh√¥ng s·ª≠a m√£ g·ªëc\nTƒÉng kh·∫£ nƒÉng b·∫£o tr√¨\tThay ƒë·ªïi h√†nh vi d·ªÖ d√†ng qua overriding\nüìö T·ªïng k·∫øt\nextends d√πng ƒë·ªÉ k·∫ø th·ª´a l·ªõp cha.\nsuper d√πng ƒë·ªÉ g·ªçi thu·ªôc t√≠nh/h√†m c·ªßa l·ªõp cha.\n@Override gi√∫p ghi ƒë√® ph∆∞∆°ng th·ª©c.\nPolymorphism cho ph√©p m·ªôt interface duy nh·∫•t bi·ªÉu di·ªÖn nhi·ªÅu h√†nh vi kh√°c nhau.\n","description":"T√¨m hi·ªÉu hai tr·ª• c·ªôt quan tr·ªçng c·ªßa l·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng trong Java: K·∫ø th·ª´a (Inheritance) v√† ƒêa h√¨nh (Polymorphism).","id":4,"section":"posts","tags":["Java","OOP","Inheritance","Polymorphism"],"title":"K·∫ø th·ª´a v√† ƒêa h√¨nh trong Java","uri":"https://leeminhquang.github.io/blogcuaquang/posts/java-inheritance-polymorphism/"},{"content":"üß© 1. Kh√°i ni·ªám L·ªõp (Class) v√† ƒê·ªëi t∆∞·ª£ng (Object) Trong Java, m·ªçi th·ª© ƒë·ªÅu xoay quanh class v√† object:\nClass (l·ªõp) l√† b·∫£n thi·∫øt k·∫ø (blueprint) m√¥ t·∫£ thu·ªôc t√≠nh v√† h√†nh vi c·ªßa m·ªôt nh√≥m ƒë·ªëi t∆∞·ª£ng. Object (ƒë·ªëi t∆∞·ª£ng) l√† th·ª±c th·ªÉ c·ª• th·ªÉ (instance) ƒë∆∞·ª£c t·∫°o ra t·ª´ l·ªõp. V√≠ d·ª•:\nL·ªõp Student l√† khu√¥n m·∫´u, c√≤n Minh, Lan, Quang l√† c√°c ƒë·ªëi t∆∞·ª£ng c·ªßa l·ªõp ƒë√≥.\nüß± 2. C·∫•u tr√∫c c∆° b·∫£n c·ªßa m·ªôt l·ªõp M·ªôt l·ªõp trong Java th∆∞·ªùng g·ªìm:\nThu·ªôc t√≠nh (Attributes / Fields) ‚Äì d·ªØ li·ªáu ƒë·∫∑c tr∆∞ng. Ph∆∞∆°ng th·ª©c (Methods) ‚Äì h√†nh vi, h√†nh ƒë·ªông. H√†m t·∫°o (Constructor) ‚Äì kh·ªüi t·∫°o gi√° tr·ªã ban ƒë·∫ßu khi t·∫°o ƒë·ªëi t∆∞·ª£ng. V√≠ d·ª•:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Student { // Thu·ªôc t√≠nh String name; int age; // H√†m t·∫°o (Constructor) public Student(String n, int a) { name = n; age = a; } // Ph∆∞∆°ng th·ª©c void introduce() { System.out.println(\u0026#34;Xin ch√†o, m√¨nh l√† \u0026#34; + name + \u0026#34;, \u0026#34; + age + \u0026#34; tu·ªïi.\u0026#34;); } } Gi·∫£i th√≠ch:\nString name, int age ‚Üí l√† bi·∫øn th√†nh vi√™n (fields) c·ªßa l·ªõp.\nStudent(\u0026hellip;) ‚Üí l√† h√†m t·∫°o d√πng ƒë·ªÉ kh·ªüi t·∫°o ƒë·ªëi t∆∞·ª£ng.\nintroduce() ‚Üí l√† h√†nh vi m√† ƒë·ªëi t∆∞·ª£ng c√≥ th·ªÉ th·ª±c hi·ªán.\nüß† 3. C√°ch t·∫°o v√† s·ª≠ d·ª•ng ƒë·ªëi t∆∞·ª£ng\nSau khi ƒë·ªãnh nghƒ©a l·ªõp, ta c√≥ th·ªÉ t·∫°o ƒë·ªëi t∆∞·ª£ng (object) t·ª´ l·ªõp b·∫±ng t·ª´ kh√≥a new:\n1 2 3 4 5 6 7 8 9 public class Main { public static void main(String[] args) { Student s1 = new Student(\u0026#34;Minh Quang\u0026#34;, 20); Student s2 = new Student(\u0026#34;Lan Anh\u0026#34;, 22); s1.introduce(); s2.introduce(); } } K·∫øt qu·∫£ khi ch·∫°y:\n1 2 Xin ch√†o, m√¨nh l√† Minh Quang, 20 tu·ªïi. Xin ch√†o, m√¨nh l√† Lan Anh, 22 tu·ªïi. üß© 4. H√†m t·∫°o (Constructor) trong Java\nConstructor l√† ph∆∞∆°ng th·ª©c ƒë·∫∑c bi·ªát:\nC√≥ t√™n tr√πng v·ªõi t√™n l·ªõp.\nKh√¥ng c√≥ ki·ªÉu tr·∫£ v·ªÅ (k·ªÉ c·∫£ void).\nD√πng ƒë·ªÉ kh·ªüi t·∫°o gi√° tr·ªã ban ƒë·∫ßu cho ƒë·ªëi t∆∞·ª£ng.\nC√≥ 2 lo·∫°i:\nConstructor m·∫∑c ƒë·ªãnh (Default Constructor)\n‚Üí T·ª± ƒë·ªông ƒë∆∞·ª£c t·∫°o n·∫øu b·∫°n kh√¥ng khai b√°o th·ªß c√¥ng.\nConstructor c√≥ tham s·ªë (Parameterized Constructor)\n‚Üí Do b·∫°n ƒë·ªãnh nghƒ©a ƒë·ªÉ g√°n gi√° tr·ªã c·ª• th·ªÉ.\nV√≠ d·ª•:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 public class Car { String brand; int year; // Constructor c√≥ tham s·ªë public Car(String b, int y) { brand = b; year = y; } // Constructor m·∫∑c ƒë·ªãnh public Car() { brand = \u0026#34;Ch∆∞a x√°c ƒë·ªãnh\u0026#34;; year = 0; } void info() { System.out.println(\u0026#34;Xe: \u0026#34; + brand + \u0026#34; - NƒÉm: \u0026#34; + year); } } public class Main { public static void main(String[] args) { Car c1 = new Car(\u0026#34;Toyota\u0026#34;, 2021); Car c2 = new Car(); c1.info(); c2.info(); } } K·∫øt qu·∫£:\n1 2 3 Sao ch√©p m√£ Xe: Toyota - NƒÉm: 2021 Xe: Ch∆∞a x√°c ƒë·ªãnh - NƒÉm: 0 ‚öôÔ∏è 5. T·ª´ kh√≥a this trong Java\nthis ƒë·∫°i di·ªán cho ƒë·ªëi t∆∞·ª£ng hi·ªán t·∫°i.\nN√≥ th∆∞·ªùng ƒë∆∞·ª£c d√πng ƒë·ªÉ ph√¢n bi·ªát bi·∫øn c·ª•c b·ªô v√† bi·∫øn th√†nh vi√™n c√≥ c√πng t√™n.\nV√≠ d·ª•:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public class Person { String name; Person(String name) { this.name = name; // \u0026#34;this.name\u0026#34; l√† thu·ªôc t√≠nh c·ªßa l·ªõp } void sayHello() { System.out.println(\u0026#34;Xin ch√†o, t√¥i l√† \u0026#34; + name); } } public class Main { public static void main(String[] args) { Person p = new Person(\u0026#34;Quang\u0026#34;); p.sayHello(); } } K·∫øt qu·∫£:\n1 2 Sao ch√©p m√£ Xin ch√†o, t√¥i l√† Quang üß© 6. T·ªïng k·∫øt\nTh√†nh ph·∫ßn\tM·ª•c ƒë√≠ch\nClass\tM√¥ t·∫£ c·∫•u tr√∫c v√† h√†nh vi chung\nObject\tTh·ª±c th·ªÉ ƒë∆∞·ª£c t·∫°o t·ª´ l·ªõp\nConstructor\tKh·ªüi t·∫°o gi√° tr·ªã ban ƒë·∫ßu cho ƒë·ªëi t∆∞·ª£ng\nthis\tƒê·∫°i di·ªán cho ƒë·ªëi t∆∞·ª£ng hi·ªán t·∫°i\nüìö T√≥m t·∫Øt\nJava l√† ng√¥n ng·ªØ h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng, n√™n class v√† object l√† n·ªÅn t·∫£ng.\nConstructor gi√∫p kh·ªüi t·∫°o d·ªØ li·ªáu ban ƒë·∫ßu.\nT·ª´ kh√≥a this gi√∫p tham chi·∫øu r√µ r√†ng ƒë·∫øn bi·∫øn c·ªßa l·ªõp.\n","description":"Hi·ªÉu r√µ kh√°i ni·ªám class, object, constructor v√† c√°ch ho·∫°t ƒë·ªông c·ªßa ch√∫ng trong Java ‚Äî n·ªÅn t·∫£ng c·ªët l√µi c·ªßa l·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng.","id":5,"section":"posts","tags":["Java","OOP","Class","Object","Constructor"],"title":"L·ªõp, ƒê·ªëi t∆∞·ª£ng v√† H√†m t·∫°o trong Java","uri":"https://leeminhquang.github.io/blogcuaquang/posts/java-classes-objects/"},{"content":"üåê 1. DOM l√† g√¨? DOM (Document Object Model) l√† m√¥ h√¨nh cho ph√©p JavaScript truy c·∫≠p v√† thao t√°c v·ªõi n·ªôi dung HTML c·ªßa trang web.\nTr√¨nh duy·ªát t·ª± ƒë·ªông chuy·ªÉn ƒë·ªïi m√£ HTML th√†nh m·ªôt c√¢y DOM (DOM tree).\nV√≠ d·ª•:\n1 2 3 4 5 6 \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1 id=\u0026#34;title\u0026#34;\u0026gt;Xin ch√†o!\u0026lt;/h1\u0026gt; \u0026lt;p class=\u0026#34;text\u0026#34;\u0026gt;ƒê√¢y l√† v√≠ d·ª• DOM.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; C·∫•u tr√∫c DOM t∆∞∆°ng ·ª©ng:\nDocument ‚îî‚îÄ‚îÄ html ‚îî‚îÄ‚îÄ body ‚îú‚îÄ‚îÄ h1 (id=\u0026#34;title\u0026#34;) ‚îî‚îÄ‚îÄ p (class=\u0026#34;text\u0026#34;) üß≠ 2. Truy c·∫≠p ph·∫ßn t·ª≠ trong DOM\nD·ª±a tr√™n ID\n1 2 let tieuDe = document.getElementById(\u0026#34;title\u0026#34;); console.log(tieuDe.textContent); D·ª±a tr√™n Class\n1 2 let doanVan = document.getElementsByClassName(\u0026#34;text\u0026#34;); console.log(doanVan[0].innerHTML); D·ª±a tr√™n Tag\n1 2 let theH1 = document.getElementsByTagName(\u0026#34;h1\u0026#34;); console.log(theH1[0].innerText); D·ª±a tr√™n CSS Selector (ph·ªï bi·∫øn nh·∫•t)\n1 2 let p = document.querySelector(\u0026#34;.text\u0026#34;); // ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n let allP = document.querySelectorAll(\u0026#34;p\u0026#34;); // t·∫•t c·∫£ c√°c th·∫ª p üß± 3. Thay ƒë·ªïi n·ªôi dung v√† thu·ªôc t√≠nh\nThay ƒë·ªïi n·ªôi dung:\n1 2 let title = document.getElementById(\u0026#34;title\u0026#34;); title.textContent = \u0026#34;Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi JavaScript!\u0026#34;; Thay ƒë·ªïi HTML b√™n trong:\n1 title.innerHTML = \u0026#34;\u0026lt;em\u0026gt;Ch√†o m·ª´ng b·∫°n!\u0026lt;/em\u0026gt;\u0026#34;; Thay ƒë·ªïi thu·ªôc t√≠nh:\n1 2 3 title.style.color = \u0026#34;red\u0026#34;; title.style.fontSize = \u0026#34;28px\u0026#34;; title.setAttribute(\u0026#34;class\u0026#34;, \u0026#34;highlight\u0026#34;); ‚ûï 4. Th√™m v√† x√≥a ph·∫ßn t·ª≠ DOM\nT·∫°o ph·∫ßn t·ª≠ m·ªõi:\n1 2 3 let newP = document.createElement(\u0026#34;p\u0026#34;); newP.textContent = \u0026#34;ƒêo·∫°n vƒÉn m·ªõi ƒë∆∞·ª£c th√™m b·∫±ng JavaScript!\u0026#34;; document.body.appendChild(newP); X√≥a ph·∫ßn t·ª≠:\n1 2 let oldP = document.querySelector(\u0026#34;.text\u0026#34;); oldP.remove(); üß† 5. X·ª≠ l√Ω s·ª± ki·ªán (Event Handling)\nC√°ch 1: D√πng HTML attribute\n1 \u0026lt;button onclick=\u0026#34;alert(\u0026#39;Xin ch√†o!\u0026#39;)\u0026#34;\u0026gt;Nh·∫•n v√†o t√¥i\u0026lt;/button\u0026gt; C√°ch 2: D√πng addEventListener()\n1 2 3 4 5 6 7 let btn = document.createElement(\u0026#34;button\u0026#34;); btn.textContent = \u0026#34;Nh·∫•n v√†o ƒë√¢y\u0026#34;; document.body.appendChild(btn); btn.addEventListener(\u0026#34;click\u0026#34;, function() { alert(\u0026#34;B·∫°n v·ª´a nh·∫•n n√∫t!\u0026#34;); }); C√°ch 3: Arrow function\n1 2 3 btn.addEventListener(\u0026#34;mouseover\u0026#34;, () =\u0026gt; { btn.style.backgroundColor = \u0026#34;lightgreen\u0026#34;; }); üîÅ 6. V√≠ d·ª• t·ªïng h·ª£p\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Demo DOM\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h2 id=\u0026#34;greeting\u0026#34;\u0026gt;Xin ch√†o!\u0026lt;/h2\u0026gt; \u0026lt;button id=\u0026#34;btn\u0026#34;\u0026gt;Thay ƒë·ªïi l·ªùi ch√†o\u0026lt;/button\u0026gt; \u0026lt;script\u0026gt; const greeting = document.getElementById(\u0026#34;greeting\u0026#34;); const btn = document.getElementById(\u0026#34;btn\u0026#34;); btn.addEventListener(\u0026#34;click\u0026#34;, () =\u0026gt; { greeting.textContent = \u0026#34;Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi DOM!\u0026#34;; greeting.style.color = \u0026#34;blue\u0026#34;; }); \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gi·∫£i th√≠ch:\nKhi ng∆∞·ªùi d√πng nh·∫•n n√∫t, ƒëo·∫°n s·∫Ω thay ƒë·ªïi n·ªôi dung v√† m√†u s·∫Øc.\nüí¨ 7. M·ªôt s·ªë s·ª± ki·ªán ph·ªï bi·∫øn\nLo·∫°i s·ª± ki·ªán\tM√¥ t·∫£\tV√≠ d·ª•\nclick\tKhi nh·∫•n chu·ªôt\tbtn.addEventListener(\u0026ldquo;click\u0026rdquo;, \u0026hellip;)\nmouseover\tKhi r√™ chu·ªôt v√†o\tThay ƒë·ªïi m√†u khi hover\nkeydown\tKhi nh·∫•n ph√≠m\tD√πng ƒë·ªÉ b·∫Øt ph√≠m ng∆∞·ªùi d√πng\nsubmit\tKhi g·ª≠i form\tKi·ªÉm tra d·ªØ li·ªáu form\nchange\tKhi gi√° tr·ªã input thay ƒë·ªïi\tX√°c th·ª±c ƒë·∫ßu v√†o ng∆∞·ªùi d√πng\n‚ö° 8. DOM Traversal (Duy·ªát c√¢y DOM)\nD√πng ƒë·ªÉ di chuy·ªÉn gi·ªØa c√°c ph·∫ßn t·ª≠ trong c√¢y DOM:\n1 2 3 4 5 6 let parent = document.querySelector(\u0026#34;#content\u0026#34;); let firstChild = parent.firstElementChild; let siblings = firstChild.nextElementSibling; console.log(parent.children); console.log(siblings); üìö 9. T·ªïng k·∫øt\nT√≠nh nƒÉng\tGi·∫£i th√≠ch\nDOM\tC·∫•u tr√∫c c√¢y ƒë·∫°i di·ªán cho t√†i li·ªáu HTML\nTruy c·∫≠p ph·∫ßn t·ª≠\tgetElementById, querySelector\u0026hellip;\nThay ƒë·ªïi n·ªôi dung\ttextContent, innerHTML, style\nTh√™m / X√≥a ph·∫ßn t·ª≠\tcreateElement, appendChild, remove\nX·ª≠ l√Ω s·ª± ki·ªán\taddEventListener ƒë·ªÉ l·∫Øng nghe v√† ph·∫£n h·ªìi h√†nh ƒë·ªông\nTraversal\tDuy·ªát gi·ªØa c√°c node trong DOM\n","description":"T√¨m hi·ªÉu c√°ch JavaScript t∆∞∆°ng t√°c v·ªõi DOM ƒë·ªÉ thay ƒë·ªïi n·ªôi dung, th√™m ph·∫ßn t·ª≠ v√† x·ª≠ l√Ω s·ª± ki·ªán tr√™n trang web.","id":6,"section":"posts","tags":["JavaScript","DOM","Event","HTML","Browser"],"title":"T∆∞∆°ng t√°c v·ªõi DOM trong JavaScript","uri":"https://leeminhquang.github.io/blogcuaquang/posts/js-dom/"},{"content":"‚öôÔ∏è 1. B·∫•t ƒë·ªìng b·ªô l√† g√¨? JavaScript l√† ng√¥n ng·ªØ ƒë∆°n lu·ªìng (single-threaded) ‚Äî nghƒ©a l√† n√≥ ch·ªâ x·ª≠ l√Ω m·ªôt t√°c v·ª• t·∫°i m·ªôt th·ªùi ƒëi·ªÉm.\nTuy nhi√™n, trong th·ª±c t·∫ø, ta th∆∞·ªùng c·∫ßn:\nG·ªçi API l·∫•y d·ªØ li·ªáu t·ª´ server ƒê·ªçc/ghi file Ch·ªù ng∆∞·ªùi d√πng nh·∫≠p li·ªáu ‚û°Ô∏è C√°c t√°c v·ª• n√†y m·∫•t th·ªùi gian, n√™n n·∫øu x·ª≠ l√Ω ƒë·ªìng b·ªô (synchronous) th√¨ ch∆∞∆°ng tr√¨nh s·∫Ω b·ªã ‚Äúƒë∆°‚Äù.\nGi·∫£i ph√°p l√† x·ª≠ l√Ω b·∫•t ƒë·ªìng b·ªô (asynchronous) ƒë·ªÉ kh√¥ng ch·∫∑n lu·ªìng ch√≠nh.\nüß± 2. V√≠ d·ª• v·ªÅ ƒë·ªìng b·ªô vs b·∫•t ƒë·ªìng b·ªô üîπ ƒê·ªìng b·ªô (Synchronous) 1 2 3 console.log(\u0026#34;B·∫Øt ƒë·∫ßu\u0026#34;); console.log(\u0026#34;ƒêang x·ª≠ l√Ω...\u0026#34;); console.log(\u0026#34;K·∫øt th√∫c\u0026#34;); K·∫øt qu·∫£:\n1 2 B·∫Øt ƒë·∫ßu ƒêang x·ª≠ l√Ω... K·∫øt th√∫c\nüîπ B·∫•t ƒë·ªìng b·ªô (Asynchronous)\n1 2 3 4 5 6 7 console.log(\u0026#34;B·∫Øt ƒë·∫ßu\u0026#34;); setTimeout(() =\u0026gt; { console.log(\u0026#34;X·ª≠ l√Ω xong sau 2 gi√¢y!\u0026#34;); }, 2000); console.log(\u0026#34;K·∫øt th√∫c\u0026#34;); K·∫øt qu·∫£:\n1 2 3 B·∫Øt ƒë·∫ßu K·∫øt th√∫c X·ª≠ l√Ω xong sau 2 gi√¢y! üí° JavaScript ti·∫øp t·ª•c ch·∫°y m√† kh√¥ng c·∫ßn ch·ªù setTimeout xong ‚Äî ƒë√¢y ch√≠nh l√† b·∫•t ƒë·ªìng b·ªô.\nüß© 3. Callback\nCallback l√† h√†m ƒë∆∞·ª£c truy·ªÅn v√†o nh∆∞ m·ªôt tham s·ªë ƒë·ªÉ g·ªçi l·∫°i sau khi t√°c v·ª• ho√†n t·∫•t.\n1 2 3 4 5 6 7 8 9 10 function layDuLieu(callback) { console.log(\u0026#34;ƒêang t·∫£i d·ªØ li·ªáu...\u0026#34;); setTimeout(() =\u0026gt; { callback(\u0026#34;D·ªØ li·ªáu ƒë√£ t·∫£i xong!\u0026#34;); }, 2000); } layDuLieu((ketqua) =\u0026gt; { console.log(ketqua); }); ‚ö†Ô∏è Tuy nhi√™n, n·∫øu l·ªìng nhi·ªÅu callback ‚Üí s·∫Ω g·∫∑p Callback Hell (r·∫•t kh√≥ ƒë·ªçc, kh√≥ b·∫£o tr√¨).\nüîÅ 4. Promise ‚Äì Gi·∫£i ph√°p cho callback hell\nPromise l√† ƒë·ªëi t∆∞·ª£ng ƒë·∫°i di·ªán cho m·ªôt gi√° tr·ªã s·∫Ω c√≥ trong t∆∞∆°ng lai:\npending ‚Äì ƒëang ch·ªù x·ª≠ l√Ω\nfulfilled ‚Äì th√†nh c√¥ng\nrejected ‚Äì th·∫•t b·∫°i\nC√∫ ph√°p:\n1 2 3 4 5 6 7 8 9 10 11 12 13 const myPromise = new Promise((resolve, reject) =\u0026gt; { let success = true; if (success) { resolve(\u0026#34;Ho√†n th√†nh!\u0026#34;); } else { reject(\u0026#34;L·ªói r·ªìi!\u0026#34;); } }); myPromise .then((res) =\u0026gt; console.log(res)) // khi th√†nh c√¥ng .catch((err) =\u0026gt; console.error(err)) // khi th·∫•t b·∫°i .finally(() =\u0026gt; console.log(\u0026#34;K·∫øt th√∫c x·ª≠ l√Ω.\u0026#34;)); K·∫øt qu·∫£ (khi th√†nh c√¥ng):\n1 2 Ho√†n th√†nh! K·∫øt th√∫c x·ª≠ l√Ω. ‚ö° 5. Async / Await ‚Äì Vi·∫øt g·ªçn h∆°n Promise\nT·ª´ ES8 (2017), JavaScript gi·ªõi thi·ªáu async/await gi√∫p code b·∫•t ƒë·ªìng b·ªô d·ªÖ ƒë·ªçc nh∆∞ ƒë·ªìng b·ªô.\nV√≠ d·ª•:\n1 2 3 4 5 6 7 8 9 10 11 12 function delay(ms) { return new Promise(resolve =\u0026gt; setTimeout(resolve, ms)); } async function chayDemo() { console.log(\u0026#34;B·∫Øt ƒë·∫ßu\u0026#34;); await delay(2000); console.log(\u0026#34;Sau 2 gi√¢y\u0026#34;); console.log(\u0026#34;K·∫øt th√∫c\u0026#34;); } chayDemo(); K·∫øt qu·∫£:\n1 2 3 4 B·∫Øt ƒë·∫ßu (ƒë·ª£i 2 gi√¢y) Sau 2 gi√¢y K·∫øt th√∫c üí° await ch·ªâ ho·∫°t ƒë·ªông b√™n trong h√†m ƒë∆∞·ª£c khai b√°o async.\nüß† 6. V√≠ d·ª• th·ª±c t·∫ø: G·ªçi API b·∫±ng Fetch + Async/Await\n1 2 3 4 5 6 7 8 9 10 11 12 13 async function getUsers() { try { const res = await fetch(\u0026#34;https://jsonplaceholder.typicode.com/users\u0026#34;); const data = await res.json(); console.table(data); } catch (error) { console.error(\u0026#34;L·ªói khi t·∫£i d·ªØ li·ªáu:\u0026#34;, error); } finally { console.log(\u0026#34;Ho√†n t·∫•t y√™u c·∫ßu.\u0026#34;); } } getUsers(); K·∫øt qu·∫£: hi·ªÉn th·ªã danh s√°ch ng∆∞·ªùi d√πng d∆∞·ªõi d·∫°ng b·∫£ng trong console.\nüîç 7. So s√°nh: Callback vs Promise vs Async/Await\nKi·ªÉu\tD·ªÖ ƒë·ªçc\tQu·∫£n l√Ω l·ªói\tGhi ch√∫\nCallback\t‚ùå Kh√≥ ƒë·ªçc\tKh√≥ x·ª≠ l√Ω\tD·ªÖ b·ªã callback hell\nPromise\t‚úÖ Kh√° t·ªët\tD·ªÖ b·∫Øt l·ªói v·ªõi .catch()\tPh√π h·ª£p cho x·ª≠ l√Ω chu·ªói\nAsync/Await\t‚úÖ‚úÖ R√µ r√†ng nh·∫•t\tD√πng try\u0026hellip;catch\tCode s·∫°ch, d·ªÖ hi·ªÉu\nüìö 8. T·ªïng k·∫øt\nAsync gi√∫p ƒë√°nh d·∫•u h√†m l√† b·∫•t ƒë·ªìng b·ªô.\nAwait gi√∫p ‚Äúch·ªù‚Äù m·ªôt Promise ho√†n t·∫•t.\nD√πng try\u0026hellip;catch ƒë·ªÉ x·ª≠ l√Ω l·ªói khi d√πng async/await.\nFetch API l√† v√≠ d·ª• ƒëi·ªÉn h√¨nh cho t√°c v·ª• b·∫•t ƒë·ªìng b·ªô trong web.\n","description":"H·ªçc c√°ch x·ª≠ l√Ω t√°c v·ª• b·∫•t ƒë·ªìng b·ªô trong JavaScript b·∫±ng Promise, async/await v√† c√°ch vi·∫øt m√£ g·ªçn g√†ng, d·ªÖ ƒë·ªçc h∆°n.","id":7,"section":"posts","tags":["JavaScript","Async","Promise","Await","Asynchronous"],"title":"X·ª≠ l√Ω b·∫•t ƒë·ªìng b·ªô v·ªõi Async/Await trong JavaScript","uri":"https://leeminhquang.github.io/blogcuaquang/posts/js-async-await/"},{"content":"‚ú® JavaScript l√† g√¨? JavaScript (JS) l√† ng√¥n ng·ªØ l·∫≠p tr√¨nh ph√≠a client, ch·∫°y tr·ª±c ti·∫øp trong tr√¨nh duy·ªát ƒë·ªÉ t·∫°o website t∆∞∆°ng t√°c v√† ƒë·ªông.\nN√≥ ƒë∆∞·ª£c s·ª≠ d·ª•ng c√πng HTML v√† CSS trong b·ªô ba c√¥ng ngh·ªá web.\nüöÄ ·ª®ng d·ª•ng c·ªßa JavaScript X√¢y d·ª±ng website ƒë·ªông Front-end frameworks: React, Vue, Angular Back-end: Node.js Mobile Apps: React Native AI/ML web-based: TensorFlow.js üî§ C√∫ ph√°p c∆° b·∫£n 1 2 3 let name = \u0026#34;Quang\u0026#34;; let age = 21; console.log(`Xin ch√†o ${name}, b·∫°n ${age} tu·ªïi.`); üìö C√°c ki·ªÉu d·ªØ li·ªáu ch√≠nh Ki·ªÉu V√≠ d·ª• string \u0026ldquo;Hello\u0026rdquo; number 42 boolean true / false array [1,2,3] object {name: \u0026ldquo;Quang\u0026rdquo;, age: 21} ","description":"","id":8,"section":"posts","tags":["JavaScript","Basics"],"title":"Gi·ªõi thi·ªáu v√† c√∫ ph√°p c∆° b·∫£n JavaScript","uri":"https://leeminhquang.github.io/blogcuaquang/posts/js-intro/"},{"content":"‚ö†Ô∏è Ngo·∫°i l·ªá l√† g√¨? Ngo·∫°i l·ªá (Exception) l√† l·ªói x·∫£y ra trong qu√° tr√¨nh ch·∫°y ch∆∞∆°ng tr√¨nh ‚Äî v√≠ d·ª• chia cho 0, truy c·∫≠p m·∫£ng sai ch·ªâ s·ªë, ho·∫∑c ƒë·ªçc file kh√¥ng t·ªìn t·∫°i.\nC·∫•u tr√∫c try-catch-finally 1 2 3 4 5 6 7 8 9 10 11 public class Main { public static void main(String[] args) { try { int a = 10 / 0; } catch (ArithmeticException e) { System.out.println(\u0026#34;L·ªói chia cho 0: \u0026#34; + e.getMessage()); } finally { System.out.println(\u0026#34;Kh·ªëi finally lu√¥n ch·∫°y!\u0026#34;); } } } ‚úÖ Gi·∫£i th√≠ch try: ch·ª©a ƒëo·∫°n m√£ c√≥ th·ªÉ g√¢y l·ªói. catch: b·∫Øt l·ªói c·ª• th·ªÉ. finally: lu√¥n ch·∫°y d√π c√≥ l·ªói hay kh√¥ng. üß≠ T·ª± t·∫°o ngo·∫°i l·ªá 1 2 3 if(age \u0026lt; 0) { throw new IllegalArgumentException(\u0026#34;Tu·ªïi kh√¥ng h·ª£p l·ªá!\u0026#34;); } ","description":"","id":9,"section":"posts","tags":["Java","Exception"],"title":"X·ª≠ l√Ω ngo·∫°i l·ªá trong Java","uri":"https://leeminhquang.github.io/blogcuaquang/posts/java-exception-handling/"}]